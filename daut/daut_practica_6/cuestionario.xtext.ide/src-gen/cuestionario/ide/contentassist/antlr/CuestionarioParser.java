/*
 * generated by Xtext 2.26.0
 */
package cuestionario.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import cuestionario.ide.contentassist.antlr.internal.InternalCuestionarioParser;
import cuestionario.services.CuestionarioGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class CuestionarioParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(CuestionarioGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, CuestionarioGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPreguntaAccess().getAlternatives(), "rule__Pregunta__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
			builder.put(grammarAccess.getCuestionarioAccess().getGroup(), "rule__Cuestionario__Group__0");
			builder.put(grammarAccess.getCuestionarioAccess().getGroup_7(), "rule__Cuestionario__Group_7__0");
			builder.put(grammarAccess.getCuestionarioAccess().getGroup_12(), "rule__Cuestionario__Group_12__0");
			builder.put(grammarAccess.getCuestionarioAccess().getGroup_17(), "rule__Cuestionario__Group_17__0");
			builder.put(grammarAccess.getCategoriaAccess().getGroup(), "rule__Categoria__Group__0");
			builder.put(grammarAccess.getCategoriaAccess().getGroup_5(), "rule__Categoria__Group_5__0");
			builder.put(grammarAccess.getCategoriaAccess().getGroup_5_3(), "rule__Categoria__Group_5_3__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
			builder.put(grammarAccess.getRespuestaAccess().getGroup(), "rule__Respuesta__Group__0");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getGroup(), "rule__PreguntaUnica__Group__0");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getGroup_11(), "rule__PreguntaUnica__Group_11__0");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getGroup_17(), "rule__PreguntaUnica__Group_17__0");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getGroup(), "rule__PreguntaMultiple__Group__0");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getGroup_11(), "rule__PreguntaMultiple__Group_11__0");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getGroup_15(), "rule__PreguntaMultiple__Group_15__0");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getGroup_20(), "rule__PreguntaMultiple__Group_20__0");
			builder.put(grammarAccess.getCuestionarioAccess().getPreguntaInicialAssignment_3(), "rule__Cuestionario__PreguntaInicialAssignment_3");
			builder.put(grammarAccess.getCuestionarioAccess().getPreguntasFinalesAssignment_6(), "rule__Cuestionario__PreguntasFinalesAssignment_6");
			builder.put(grammarAccess.getCuestionarioAccess().getPreguntasFinalesAssignment_7_1(), "rule__Cuestionario__PreguntasFinalesAssignment_7_1");
			builder.put(grammarAccess.getCuestionarioAccess().getPreguntasAssignment_11(), "rule__Cuestionario__PreguntasAssignment_11");
			builder.put(grammarAccess.getCuestionarioAccess().getPreguntasAssignment_12_1(), "rule__Cuestionario__PreguntasAssignment_12_1");
			builder.put(grammarAccess.getCuestionarioAccess().getCategoriasAssignment_16(), "rule__Cuestionario__CategoriasAssignment_16");
			builder.put(grammarAccess.getCuestionarioAccess().getCategoriasAssignment_17_1(), "rule__Cuestionario__CategoriasAssignment_17_1");
			builder.put(grammarAccess.getCategoriaAccess().getNameAssignment_1(), "rule__Categoria__NameAssignment_1");
			builder.put(grammarAccess.getCategoriaAccess().getDificultadAssignment_4(), "rule__Categoria__DificultadAssignment_4");
			builder.put(grammarAccess.getCategoriaAccess().getSubcategoriasAssignment_5_2(), "rule__Categoria__SubcategoriasAssignment_5_2");
			builder.put(grammarAccess.getCategoriaAccess().getSubcategoriasAssignment_5_3_1(), "rule__Categoria__SubcategoriasAssignment_5_3_1");
			builder.put(grammarAccess.getRespuestaAccess().getNameAssignment_1(), "rule__Respuesta__NameAssignment_1");
			builder.put(grammarAccess.getRespuestaAccess().getOpcionAssignment_4(), "rule__Respuesta__OpcionAssignment_4");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getNameAssignment_1(), "rule__PreguntaUnica__NameAssignment_1");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getEnunciadoAssignment_4(), "rule__PreguntaUnica__EnunciadoAssignment_4");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getPuntuacionAssignment_6(), "rule__PreguntaUnica__PuntuacionAssignment_6");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getPenalizacionAssignment_8(), "rule__PreguntaUnica__PenalizacionAssignment_8");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getCategoriaAssignment_10(), "rule__PreguntaUnica__CategoriaAssignment_10");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getSiguientePreguntaAssignment_11_1(), "rule__PreguntaUnica__SiguientePreguntaAssignment_11_1");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getCorrectaAssignment_13(), "rule__PreguntaUnica__CorrectaAssignment_13");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getRespuestasAssignment_16(), "rule__PreguntaUnica__RespuestasAssignment_16");
			builder.put(grammarAccess.getPreguntaUnicaAccess().getRespuestasAssignment_17_1(), "rule__PreguntaUnica__RespuestasAssignment_17_1");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getNameAssignment_1(), "rule__PreguntaMultiple__NameAssignment_1");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getEnunciadoAssignment_4(), "rule__PreguntaMultiple__EnunciadoAssignment_4");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getPuntuacionAssignment_6(), "rule__PreguntaMultiple__PuntuacionAssignment_6");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getPenalizacionAssignment_8(), "rule__PreguntaMultiple__PenalizacionAssignment_8");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getCategoriaAssignment_10(), "rule__PreguntaMultiple__CategoriaAssignment_10");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getSiguientePreguntaAssignment_11_1(), "rule__PreguntaMultiple__SiguientePreguntaAssignment_11_1");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getCorrectasAssignment_14(), "rule__PreguntaMultiple__CorrectasAssignment_14");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getCorrectasAssignment_15_1(), "rule__PreguntaMultiple__CorrectasAssignment_15_1");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getRespuestasAssignment_19(), "rule__PreguntaMultiple__RespuestasAssignment_19");
			builder.put(grammarAccess.getPreguntaMultipleAccess().getRespuestasAssignment_20_1(), "rule__PreguntaMultiple__RespuestasAssignment_20_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private CuestionarioGrammarAccess grammarAccess;

	@Override
	protected InternalCuestionarioParser createParser() {
		InternalCuestionarioParser result = new InternalCuestionarioParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public CuestionarioGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(CuestionarioGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
