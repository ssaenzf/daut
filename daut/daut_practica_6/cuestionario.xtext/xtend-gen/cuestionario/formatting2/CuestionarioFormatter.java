/**
 * generated by Xtext 2.26.0
 */
package cuestionario.formatting2;

import com.google.inject.Inject;
import cuestionario.Categoria;
import cuestionario.Cuestionario;
import cuestionario.Pregunta;
import cuestionario.services.CuestionarioGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class CuestionarioFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private CuestionarioGrammarAccess _cuestionarioGrammarAccess;
  
  protected void _format(final Cuestionario cuestionario, @Extension final IFormattableDocument document) {
    EList<Pregunta> _preguntas = cuestionario.getPreguntas();
    for (final Pregunta pregunta : _preguntas) {
      document.<Pregunta>format(pregunta);
    }
    EList<Categoria> _categorias = cuestionario.getCategorias();
    for (final Categoria categoria : _categorias) {
      document.<Categoria>format(categoria);
    }
  }
  
  protected void _format(final Categoria categoria, @Extension final IFormattableDocument document) {
    EList<Categoria> _subcategorias = categoria.getSubcategorias();
    for (final Categoria _categoria : _subcategorias) {
      document.<Categoria>format(_categoria);
    }
  }
  
  public void format(final Object categoria, final IFormattableDocument document) {
    if (categoria instanceof XtextResource) {
      _format((XtextResource)categoria, document);
      return;
    } else if (categoria instanceof Categoria) {
      _format((Categoria)categoria, document);
      return;
    } else if (categoria instanceof Cuestionario) {
      _format((Cuestionario)categoria, document);
      return;
    } else if (categoria instanceof EObject) {
      _format((EObject)categoria, document);
      return;
    } else if (categoria == null) {
      _format((Void)null, document);
      return;
    } else if (categoria != null) {
      _format(categoria, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(categoria, document).toString());
    }
  }
}
